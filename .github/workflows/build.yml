name: Build and Deploy Microservices

on:
  push:
    branches:
      - main_test
  pull_request:
    branches:
      - main_test

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: polynome
        ports:
          - "3307:3306"

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Set Environment Variables
        run: |
          echo "MYSQL_HOST=127.0.0.1" >> $GITHUB_ENV
          echo "MYSQL_PORT=3307" >> $GITHUB_ENV
          echo "MYSQL_USER=root" >> $GITHUB_ENV
          echo "MYSQL_PASSWORD=root" >> $GITHUB_ENV

      - name: Wait for MySQL to be ready
        run: |
          echo "Waiting for MySQL to start..."
          for i in {1..30}; do
            if docker exec $(docker ps -q --filter "ancestor=mysql:8.0") mysqladmin ping -h "localhost" -P 3306 --silent; then
              echo "MySQL is ready!"
              break
            fi
            echo "Waiting for MySQL..."
            sleep 2
          done

      - name: Cache Maven Packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-m2

      - name: Build Spring Boot Application
        run: mvn clean install -DskipTests

      - name: Run Tests
        run: mvn test

      - name: Analyze with SonarCloud
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          mvn sonar:sonar \
            -Dsonar.projectKey=NOUTAILAA_MicroServiceStockage_CalculAutomatiseRacinePolynome \
            -Dsonar.organization=noutailaa \
            -Dsonar.host.url=https://sonarcloud.io

      - name: Upload Test Coverage Report
        if: success()
        uses: actions/upload-artifact@v3
        with:
          name: jacoco-report
          path: target/site/jacoco

      - name: Show MySQL logs (debug)
        if: failure()
        run: docker logs $(docker ps -q --filter "ancestor=mysql:8.0")
